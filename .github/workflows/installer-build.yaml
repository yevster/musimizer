name: Build and Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            package-type: msi
            file-ext: msi
            jpackage-args: --win-menu --win-shortcut --win-dir-chooser
            javafx-platform: win
            javafx-ext: zip
          - os: macos-latest
            package-type: pkg
            file-ext: pkg
            jpackage-args: --mac-package-identifier com.musimizer --mac-package-name "Musimizer"
            javafx-platform: mac
            javafx-ext: zip

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Download JavaFX SDK
      run: |
        JAVAFX_VERSION=21.0.3
        FXZIP="openjfx-${JAVAFX_VERSION}_${{ matrix.javafx-platform }}-x64_bin.${{ matrix.javafx-ext }}"
        curl -L -o $FXZIP https://download2.gluonhq.com/openjfx/${JAVAFX_VERSION}/${FXZIP}
        unzip -q $FXZIP
        echo "JAVA_FX_SDK=$(pwd)/javafx-sdk-${JAVAFX_VERSION}" >> $GITHUB_ENV

    - name: Install WiX Toolset (Windows only, via Chocolatey)
      if: matrix.os == 'windows-latest'
      run: choco install wixtoolset -y

    - name: Build with Maven
      run: mvn -B clean package -DskipTests -Djavafx.platform=${{ matrix.javafx-platform }}

    - name: Create runtime image
      run: |
        jlink --module-path "$JAVA_HOME/jmods:$(echo $JAVA_FX_SDK)/jmods" \
              --add-modules java.base,java.desktop,javafx.controls,javafx.fxml,javafx.graphics,javafx.base \
              --output target/image \
              --strip-debug \
              --compress 2 \
              --no-header-files \
              --no-man-pages
      shell: bash

    - name: Create installer
      run: |
        version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT$//')
        jpackage --name "Musimizer" \
                 --input target \
                 --main-jar "musimizer-${version}.jar" \
                 --main-class "com.musimizer.MainApp" \
                 --type "${{ matrix.package-type }}" \
                 --dest target/installer \
                 --runtime-image target/image \
                 --app-version "$version" \
                 --vendor "Musimizer" \
                 --copyright "Copyright $(date +'%Y')" \
                 ${{ matrix.jpackage-args }}
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Musimizer-${{ matrix.os }}-${{ github.ref_name }}
        path: target/installer/*.${{ matrix.file-ext }}
        if-no-files-found: error